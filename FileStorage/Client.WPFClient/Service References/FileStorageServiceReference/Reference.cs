//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.WPFClient.FileStorageServiceReference {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileStorageServiceReference.IFileStorageService")]
    public interface IFileStorageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFile", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileResponse")]
        void UploadFile(System.IO.Stream fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFile", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileResponse")]
        System.Threading.Tasks.Task UploadFileAsync(System.IO.Stream fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/DownloadFile", ReplyAction="http://tempuri.org/IFileStorageService/DownloadFileResponse")]
        System.IO.Stream DownloadFile(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/DownloadFile", ReplyAction="http://tempuri.org/IFileStorageService/DownloadFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(System.Guid fileId);
        
        // CODEGEN: Generating message contract since the operation UploadFileWithMetadata is neither RPC nor document wrapped.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFileWithMetadata", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileWithMetadataResponse")]
        Client.WPFClient.FileStorageServiceReference.UploadFileWithMetadataResponse UploadFileWithMetadata(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFileWithMetadata", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileWithMetadataResponse")]
        System.Threading.Tasks.Task<Client.WPFClient.FileStorageServiceReference.UploadFileWithMetadataResponse> UploadFileWithMetadataAsync(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request);
        
        // CODEGEN: Generating message contract since the wrapper name (RemoteFileStreamMessage) of message RemoteFileStreamMessage does not match the default value (DownloadFileWithMetadata)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/DownloadFileWithMetadata", ReplyAction="http://tempuri.org/IFileStorageService/DownloadFileWithMetadataResponse")]
        Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage DownloadFileWithMetadata(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/DownloadFileWithMetadata", ReplyAction="http://tempuri.org/IFileStorageService/DownloadFileWithMetadataResponse")]
        System.Threading.Tasks.Task<Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage> DownloadFileWithMetadataAsync(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="RemoteFileStreamMessage", WrapperNamespace="http://tempuri.org/", IsWrapped=true)]
    public partial class RemoteFileStreamMessage {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public System.Guid fileId;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string fileName;
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public long streamLength;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public System.IO.Stream data;
        
        public RemoteFileStreamMessage() {
        }
        
        public RemoteFileStreamMessage(System.Guid fileId, string fileName, long streamLength, System.IO.Stream data) {
            this.fileId = fileId;
            this.fileName = fileName;
            this.streamLength = streamLength;
            this.data = data;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(IsWrapped=false)]
    public partial class UploadFileWithMetadataResponse {
        
        public UploadFileWithMetadataResponse() {
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileStorageServiceChannel : Client.WPFClient.FileStorageServiceReference.IFileStorageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileStorageServiceClient : System.ServiceModel.ClientBase<Client.WPFClient.FileStorageServiceReference.IFileStorageService>, Client.WPFClient.FileStorageServiceReference.IFileStorageService {
        
        public FileStorageServiceClient() {
        }
        
        public FileStorageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileStorageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileStorageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileStorageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UploadFile(System.IO.Stream fileData) {
            base.Channel.UploadFile(fileData);
        }
        
        public System.Threading.Tasks.Task UploadFileAsync(System.IO.Stream fileData) {
            return base.Channel.UploadFileAsync(fileData);
        }
        
        public System.IO.Stream DownloadFile(System.Guid fileId) {
            return base.Channel.DownloadFile(fileId);
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> DownloadFileAsync(System.Guid fileId) {
            return base.Channel.DownloadFileAsync(fileId);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.WPFClient.FileStorageServiceReference.UploadFileWithMetadataResponse Client.WPFClient.FileStorageServiceReference.IFileStorageService.UploadFileWithMetadata(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request) {
            return base.Channel.UploadFileWithMetadata(request);
        }
        
        public void UploadFileWithMetadata(System.Guid fileId, string fileName, long streamLength, System.IO.Stream data) {
            Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage inValue = new Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage();
            inValue.fileId = fileId;
            inValue.fileName = fileName;
            inValue.streamLength = streamLength;
            inValue.data = data;
            Client.WPFClient.FileStorageServiceReference.UploadFileWithMetadataResponse retVal = ((Client.WPFClient.FileStorageServiceReference.IFileStorageService)(this)).UploadFileWithMetadata(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.WPFClient.FileStorageServiceReference.UploadFileWithMetadataResponse> Client.WPFClient.FileStorageServiceReference.IFileStorageService.UploadFileWithMetadataAsync(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request) {
            return base.Channel.UploadFileWithMetadataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.WPFClient.FileStorageServiceReference.UploadFileWithMetadataResponse> UploadFileWithMetadataAsync(System.Guid fileId, string fileName, long streamLength, System.IO.Stream data) {
            Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage inValue = new Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage();
            inValue.fileId = fileId;
            inValue.fileName = fileName;
            inValue.streamLength = streamLength;
            inValue.data = data;
            return ((Client.WPFClient.FileStorageServiceReference.IFileStorageService)(this)).UploadFileWithMetadataAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage Client.WPFClient.FileStorageServiceReference.IFileStorageService.DownloadFileWithMetadata(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request) {
            return base.Channel.DownloadFileWithMetadata(request);
        }
        
        public void DownloadFileWithMetadata(ref System.Guid fileId, ref string fileName, ref long streamLength, ref System.IO.Stream data) {
            Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage inValue = new Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage();
            inValue.fileId = fileId;
            inValue.fileName = fileName;
            inValue.streamLength = streamLength;
            inValue.data = data;
            Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage retVal = ((Client.WPFClient.FileStorageServiceReference.IFileStorageService)(this)).DownloadFileWithMetadata(inValue);
            fileId = retVal.fileId;
            fileName = retVal.fileName;
            streamLength = retVal.streamLength;
            data = retVal.data;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage> Client.WPFClient.FileStorageServiceReference.IFileStorageService.DownloadFileWithMetadataAsync(Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage request) {
            return base.Channel.DownloadFileWithMetadataAsync(request);
        }
        
        public System.Threading.Tasks.Task<Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage> DownloadFileWithMetadataAsync(System.Guid fileId, string fileName, long streamLength, System.IO.Stream data) {
            Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage inValue = new Client.WPFClient.FileStorageServiceReference.RemoteFileStreamMessage();
            inValue.fileId = fileId;
            inValue.fileName = fileName;
            inValue.streamLength = streamLength;
            inValue.data = data;
            return ((Client.WPFClient.FileStorageServiceReference.IFileStorageService)(this)).DownloadFileWithMetadataAsync(inValue);
        }
    }
}

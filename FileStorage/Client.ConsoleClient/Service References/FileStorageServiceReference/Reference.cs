//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34014
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Client.ConsoleClient.FileStorageServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="RemoteStreamEnvelope", Namespace="http://schemas.datacontract.org/2004/07/WCFService.ServiceLibrary")]
    [System.SerializableAttribute()]
    public partial class RemoteStreamEnvelope : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.IO.Stream FileDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private System.Guid FileIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int MyPropertyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private long StreamLengthField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.IO.Stream FileData {
            get {
                return this.FileDataField;
            }
            set {
                if ((object.ReferenceEquals(this.FileDataField, value) != true)) {
                    this.FileDataField = value;
                    this.RaisePropertyChanged("FileData");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public System.Guid FileId {
            get {
                return this.FileIdField;
            }
            set {
                if ((this.FileIdField.Equals(value) != true)) {
                    this.FileIdField = value;
                    this.RaisePropertyChanged("FileId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int MyProperty {
            get {
                return this.MyPropertyField;
            }
            set {
                if ((this.MyPropertyField.Equals(value) != true)) {
                    this.MyPropertyField = value;
                    this.RaisePropertyChanged("MyProperty");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public long StreamLength {
            get {
                return this.StreamLengthField;
            }
            set {
                if ((this.StreamLengthField.Equals(value) != true)) {
                    this.StreamLengthField = value;
                    this.RaisePropertyChanged("StreamLength");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="FileStorageServiceReference.IFileStorageService")]
    public interface IFileStorageService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFile", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileResponse")]
        void UploadFile(System.IO.Stream fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFile", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileResponse")]
        System.Threading.Tasks.Task UploadFileAsync(System.IO.Stream fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/GetFile", ReplyAction="http://tempuri.org/IFileStorageService/GetFileResponse")]
        System.IO.Stream GetFile();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/GetFile", ReplyAction="http://tempuri.org/IFileStorageService/GetFileResponse")]
        System.Threading.Tasks.Task<System.IO.Stream> GetFileAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFileEnvelope", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileEnvelopeResponse")]
        void UploadFileEnvelope(Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/UploadFileEnvelope", ReplyAction="http://tempuri.org/IFileStorageService/UploadFileEnvelopeResponse")]
        System.Threading.Tasks.Task UploadFileEnvelopeAsync(Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope fileData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/GetFileEnvelope", ReplyAction="http://tempuri.org/IFileStorageService/GetFileEnvelopeResponse")]
        Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope GetFileEnvelope(System.Guid fileId);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IFileStorageService/GetFileEnvelope", ReplyAction="http://tempuri.org/IFileStorageService/GetFileEnvelopeResponse")]
        System.Threading.Tasks.Task<Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope> GetFileEnvelopeAsync(System.Guid fileId);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IFileStorageServiceChannel : Client.ConsoleClient.FileStorageServiceReference.IFileStorageService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class FileStorageServiceClient : System.ServiceModel.ClientBase<Client.ConsoleClient.FileStorageServiceReference.IFileStorageService>, Client.ConsoleClient.FileStorageServiceReference.IFileStorageService {
        
        public FileStorageServiceClient() {
        }
        
        public FileStorageServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public FileStorageServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileStorageServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public FileStorageServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void UploadFile(System.IO.Stream fileData) {
            base.Channel.UploadFile(fileData);
        }
        
        public System.Threading.Tasks.Task UploadFileAsync(System.IO.Stream fileData) {
            return base.Channel.UploadFileAsync(fileData);
        }
        
        public System.IO.Stream GetFile() {
            return base.Channel.GetFile();
        }
        
        public System.Threading.Tasks.Task<System.IO.Stream> GetFileAsync() {
            return base.Channel.GetFileAsync();
        }
        
        public void UploadFileEnvelope(Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope fileData) {
            base.Channel.UploadFileEnvelope(fileData);
        }
        
        public System.Threading.Tasks.Task UploadFileEnvelopeAsync(Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope fileData) {
            return base.Channel.UploadFileEnvelopeAsync(fileData);
        }
        
        public Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope GetFileEnvelope(System.Guid fileId) {
            return base.Channel.GetFileEnvelope(fileId);
        }
        
        public System.Threading.Tasks.Task<Client.ConsoleClient.FileStorageServiceReference.RemoteStreamEnvelope> GetFileEnvelopeAsync(System.Guid fileId) {
            return base.Channel.GetFileEnvelopeAsync(fileId);
        }
    }
}
